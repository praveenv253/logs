Wednesday | 10 Jun 2015 | 09:46:12 | GMT-0400
[matlab] [figure] [maintain dimensions] To save a figure with specific dimensions, look at http://www.mathworks.com/help/matlab/creating_plots/save-figure-at-specific-size-and-resolution.html 

Thursday | 02 Apr 2015 | 11:46:10 | GMT-0400
[gimp] [export] [pdf] Gimp imports multi-page pdfs as one layer-per-page. But it does not re-export multi-layer figures as a multi-page pdf, with one page-per-layer. It just exports the topmost visible layer. I found a solution for this here http://registry.gimp.org/node/25400. You need to reverse the order of layers, export the project as a .mng animation. Then, from command line, call convert file.mng file.pdf. Apparently, for convert to work, you need to have ImageMagick installed, but I think I had it by default. 

Sunday | 22 Mar 2015 | 03:14:02 | GMT-0400
[numpy] [scipy] [linear regression] Note that there are multiple numpy/scipy functions that do regression, fitting, etc. Of these, scipy.stats.linregress fits a line and forces an intercept. You do not have to explicitly add 1s or anything. numpy.linalg.lstsq does plain old linear regression - your inputs can even be matrices. It simply returns argmin |ax - b|^2 for given a and b, and therefore does not force an intercept. The last one I want to mention is scipy.optimize.leastsq. This one is a non-linear least squares solver, and I know nothing more about it. 

Tuesday | 03 Mar 2015 | 20:57:30 | GMT-0500
[nautilus] [hidden files] [default] Nautilus shows hidden files by default when opened from command line. To fix this, go to dconf-editor, and under org->gtk->settings->file-chooser, uncheck show-hidden. Link: http://ubuntuforums.org/showthread.php?t=2133298&s=cc010bab19c680d2f485dd0eb8575a28&p=12623240#post12623240 

Tuesday | 16 Dec 2014 | 14:07:12 | GMT+0530
[remap keys] [prtsc] [menu] [14.04] Remapping PrtSc to Menu requires that you define your own xkb modification. I have added the modified versions of the relevant configuration files to the misc repository, along with a README containing some explanantions. 

Tuesday | 16 Dec 2014 | 11:38:45 | GMT+0530
[remap] [caps lock] [ctrl] [14.04] How do you make the settings described in the previous log message permanent? The first thing you need to do is to install dconf-editor. Open it up and go to org > gnome > desktop > input-sources. Here, there is an xkb-options setting. This is where you need to place your modifications. So change xkb-options to ['shift:both_capslock','ctrl:nocaps']. This should take effect immediately and work fine on login. However, it will only work as long as you stay with the same keyboard configuration. If you change keyboard configurations, the xkb-options setting gets reset, and will not continue to work. 

Tuesday | 16 Dec 2014 | 11:32:00 | GMT+0530
[remap] [caps lock] [ctrl] [14.04] Remapping Caps Lock to Control in 14.04 was one of the biggest headaches in a long long time. But here is what you have to do: http://www.linux.com/learn/tutorials/769644-hacking-your-linux-keyboard-with-xkb shows you how you can use xkb to make modifications to key functions. But it does not list all possible modifications that exist. To see what modifications xkb already provides, take a look at /usr/share/X11/xkb/symbols. There are files called "ctrl" and "capslock" and such. The file ctrl, for example, has a modification called "nocaps". You can now use this modification from command line by saying: setxkbmap -option "ctrl:nocaps". Another modification I liked was "shift:both_capslock", which toggles caps lock when you press both shift keys together. To be continued... 

Tuesday | 16 Dec 2014 | 10:36:30 | GMT+0530
[nautilus] [right click] [open in terminal] To get the "Open in terminal" command in the right-click menu of nautilus, install nautilus-open-terminal and nautilus-actions. Then restart nautilus with nautilus -q. Reference: http://askubuntu.com/questions/450280/open-in-terminal-action-in-nautilus-in-ubuntu-14-04. 

Tuesday | 16 Dec 2014 | 10:32:23 | GMT+0530
[nautilus] [foreground] To make nautilus open windows in front of the terminal in 14.04, install compizconfig-settings-manager and set the "Focus Prevention Level" to "Off" under "General Options" > "Focus and raise behaviour". Reference: http://askubuntu.com/questions/365030/how-to-make-nemo-start-in-foreground 

Sunday | 14 Dec 2014 | 13:05:27 | GMT+0530
[matplotlib] [legend outside plot] http://stackoverflow.com/questions/4700614/how-to-put-the-legend-out-of-the-plot 

Thursday | 30 Oct 2014 | 02:14:03 | GMT-0400
[numpy] [ndarray] [expanding dimensions] In order to expand the number of dimensions of a numpy array, there are several options: np.expand_dims(x, axis=1) or x[:, np.newaxis] or x[:, None]. Refer to http://docs.scipy.org/doc/numpy/reference/generated/numpy.expand_dims.html. 

Sunday | 28 Sep 2014 | 18:41:52 | GMT-0400
[profile] [bashrc] My ~/.bashrc file was not getting automatically loaded when I ssh-ed into the ece server. Turns out that you need a ~/.profile file, which tells bash to load ~/.bashrc. So I copied the default ~/.profile file from my computer. 

Sunday | 28 Sep 2014 | 18:36:16 | GMT-0400
[bash] [inputrc] [reload] When I ssh-ed into the ece server, inputrc was not loaded by default. So command-line history was not iPython-like. To make this happen, just press Ctrl-X Ctrl-R in bash. It re-reads the init file, i.e. reloads commands from .inputrc. Source: http://superuser.com/questions/241187/how-do-i-reload-inputrc. Reference: http://www.gnu.org/software/bash/manual/bashref.html#Miscellaneous-Commands 

Sunday | 28 Sep 2014 | 17:50:59 | GMT-0400
[vim-bundle] [git] [submodules] I made the .vim/bundle folder into a repo of submodules. In order to successfully clone and set up this folder, first clone bundle, then run git submodule init followed by git submodule update in that folder. 

Monday | 22 Sep 2014 | 15:44:09 | GMT-0400
[bash] [single quotes] In bash, single-quotation causes _all_ characters within to be treated as literal. "A single quotation mark may not appear within single quotes; not even when preceded by a backslash." - From the man pages of bash. 

Friday | 19 Sep 2014 | 23:18:46 | GMT-0400
[top] [htop] [processor utilization] To check out CPU utilization using a fancier top command, try htop. 

Thursday | 04 Sep 2014 | 22:41:12 | GMT-0400
[bash] [fignore] [tab completion] Use the FIGNORE environment variable to tell bash to ignore certain file extensions while performing tab completion. 

Wednesday | 23 Jul 2014 | 18:07:20 | GMT+0530
[bash] [history] [timestamp] In order to get a time-stamped command line history for bash, look up the HISTTIMEFORMAT setting in the man pages for bash. My HISTTIMEFORMAT is currently set to "%F %T ", to understand which you have to look at the arguments to strftime(3). %F means YYYY-MM-DD and %T means hh:mm:ss. These time stamps are stored in a weird fashion, possibly seconds from epoch or something, so you cannot understand them by just looking at the .bash_history file. Instead, use the "history" command. Here, the timestamps are formatted as requested. To find out more, do a help history (not man! - this is a bash thing). 

Wednesday | 23 Jul 2014 | 16:02:23 | GMT+0530
[bash] [arguments] [parsing] [getopt] A possible method to ease the pain of parsing arguments in bash: man getopt. Note that this is GNU getopt in linux, by default. The non-GNU getopt is apparently "fundamentally broken". Read http://stackoverflow.com/questions/402377/using-getopts-in-bash-shell-script-to-get-long-and-short-command-line-options. 

Wednesday | 23 Jul 2014 | 12:18:28 | GMT+0530
[terminal] [bash] [z] [t] Tools for improving your efficiency with the terminal: https://github.com/rupa/z/ and https://github.com/sjl/t/ 

Sunday | 20 Jul 2014 | 17:56:33 | GMT+0530
[ruby] [ubuntu] [installtion] Here is a nice tutorial on installing ruby on ubuntu: http://ryanbigg.com/2010/12/ubuntu-ruby-rvm-rails-and-you/ 

Monday | 14 Jul 2014 | 00:47:50 | GMT+0530
[encryption] [gpg] Encrypt a file with gpg -c <file>. Decrypt with gpg <file>. Be sure to delete the un-encrypted file after encryption. shred it, perhaps. 

Friday | 04 Jul 2014 | 16:15:17 | GMT+0530
[thinkpad] [intel] [slow wifi] In order to solve the problem of a slow wireless connection on Thinkpads running Ubuntu 12.04 (and possibly later versions as well), disable the N-mode (IEEE802.11n) as described here: http://askubuntu.com/questions/119578/how-to-fix-slow-wireless-on-machines-with-intel-wireless-cards 

Thursday | 26 Jun 2014 | 00:45:40 | GMT+0530
[g++] [make] [dependencies] In order to find out which headers each .cpp file requires, perform a g++ -MM file.cpp. This lists out the dependencies for converting file.cpp into an object file. man g++ and do a /-M for the whole list of sub-options. -MM does not list system libraries. 

Saturday | 14 Jun 2014 | 22:33:13 | GMT+0530
[matplotlib] [fonts] When trying to change fonts in matplotlib, you might run into an error that says that the font or the font family was not found. To fix this, you need to actually add the font to matplotlibs font database. For me, this is in /usr/share/matplotlib/mpl-data/fonts/ttf. Create a symbolic link to the font of your choice over here. Then use the _name_ of font package - open the font file with the default Font Viewer for this - in matplotlibrc to set your font preference. 

Saturday | 14 Jun 2014 | 17:48:04 | GMT+0530
[rhythmbox] [stop after current track] [plugins] I was trying to find a method to get Rhythmbox to stop after the current track. I found a plugin that does this, but it is old, and the manual installation does not work. Instead, I found this: http://askubuntu.com/questions/147942/how-do-i-install-third-party-rhythmbox-plugins, which seems more future-proof. 

Friday | 13 Jun 2014 | 18:32:11 | GMT+0530
[firefox] [tabs] [ctrl pgup] [ctrl pgdn] Firefox doesnt change tabs with Ctrl+PgUp or Ctrl+PgDn when you are focused on a text input field. To fix this, install the "free control" add-on. https://addons.mozilla.org/en-US/firefox/addon/free-control/ 

Monday | 09 Jun 2014 | 14:42:01 | GMT+0530
[latex] [thesis] [font] Check out some choices on fonts for a thesis: http://www.khirevich.com/latex/font/. They use Bitstream Charter for the main body text and Computer Modern for the math. 

Tuesday | 13 May 2014 | 22:52:00 | GMT+0530
[ubuntu] [launcher] [desktop] [tvim] In order to make applications that you can "summon" from X, say by double-clicking on a file in nautilus, you need to create a .desktop file corresponding to your application. To figure out how to do this, look at https://help.ubuntu.com/community/UnityLaunchersAndDesktopFiles. tvim.desktop makes for a good template. I have also made a couple of notes in misc/tvim.sh. 

Monday | 05 May 2014 | 16:43:58 | GMT+0530
[ssh] [keygen] [id_rsa] In order to create a pair of RSA keys, use ssh-keygen -t rsa -C "user@host". The -C option is optional, but can be used to put your email address into the key. 

Sunday | 04 May 2014 | 22:46:39 | GMT+0530
[glibc version] [ldd] You can find out your glibc version by running ldd --version. You can also do a locate libc.so.6 and then execute the shared library like a program. This actually displays the version and some additional compile information. 

Thursday | 24 Apr 2014 | 19:01:34 | GMT+0530
[python] [matplotlib] [removing lines] To remove lines the object oriented way in matplotlib (using axes, etc.) take a look at my tuner program for an example. Alternatively, look at the fitzhugh-nagumo assignment of the computational neuroscience course. 

Thursday | 24 Apr 2014 | 18:59:41 | GMT+0530
[python] [non blocking input] [select] Use the select module in python for non-blocking input. Look at my tuner program for an example of its usage. 

Saturday | 05 Apr 2014 | 11:59:57 | GMT+0530
[bash] [command history] [completion] To get ipython-like command completion in bash, i.e. to make it so that bash will only search the subset of history that starts with letters you have already entered so far (thus making it easier to search through history, without having to use the unwieldy Ctrl-R), you need to add a few lines to .inputrc. Take a look at http://askubuntu.com/questions/12368/ipython-like-command-history-for-shell for more. 

Saturday | 15 Mar 2014 | 22:55:56 | GMT+0530
[g++] [gcc] [ld] [C++] [C] [make] When linking object files (static libraries) into an executable, the order in which you give the libraries matters. For simple scenarios where there are no cyclic references, the *dependent* library should come on the left, and the library which *provides said dependency* should come on the right. Take a look at http://stackoverflow.com/questions/45135/linker-order-gcc to see a diagrammatic view of this, and also to see how cyclic dependencies can be resolved. 

Saturday | 15 Mar 2014 | 22:52:34 | GMT+0530
[C++] [templates] [template functions] "The implementation of a non-specialized template must be visible to a translation unit that uses it. The compiler must be able to see the implementation in order to generate code for all specializations in your code." What this essentially means is that you cannot define an external templated function in the typical way: have the template function declaration in the header, followed by an implementation of the template function in a C++ file, which then gets compiled into an object file, and later gets linked with the main program. This method does not work. Why? Because the compiler needs to "know" what the "full" definition of the function is (with actual classes of the templated types) in order to actually compile the program. A template function is simply a sort of shorthand for writing many functions of that do the same thing with different data types; but the compiler still needs to actually create "specializations" of this template for each type that actually gets used. That is the only way it can generate object code. Check out http://stackoverflow.com/questions/10632251/undefined-reference-to-template-function on ways to resolve this issue. One method involves putting the implementation in the header. The other method involves pre-defining the specializations. 

Wednesday | 26 Feb 2014 | 17:16:40 | GMT+0530
[vim] [modeline] [filetype] Note that in order for vim modelines to work, you must have the 'modeline' option *set*, i.e. :set modeline. Do a :help modeline for more info. 

Tuesday | 18 Feb 2014 | 00:44:49 | GMT+0530
[C] [C++] [headers] [const] [static] [multiple definition error] If you have defined a variable in a header file and not declared it as const, like so: double e = 2.71; then the compiler will treat it as a separate variable in each translation unit. So if you link two such translation units together under the same object later, you will get a multiple definition error, or something like "already defined in...". To solve this issue, mark this variable as static const (in C), or as simply const (in C++, where static is implied for const variables). What this does is to make the linkage of this variable definition _internal_, meaning that once this definition gets #included into a .c or .cpp file, the definition stays there. It does not have scope outside of the translation unit, and thus cannot be seen by the other object files. On the other hand, the addresses of each of these "copies" of the constant in different translation units will be different. To have a "true" global constant this way, you will need to have an "extern const double e;" in your header file, followed by a "const double e = 2.71;" in a separate source file, which is compiled into a separate object file, _which_ then gets linked with all the other objects. Courtesy of http://stackoverflow.com/questions/2328671/constant-variables-not-working-in-header. 

Tuesday | 11 Feb 2014 | 12:46:08 | GMT+0530
[sudoers] [file corruption] If you accidentally corrupt your /etc/sudoers file (usually by reading it without sudo, incorrectly interpreting that it is empty, and then writing into it _with_ sudo, and finally being unable to correct it because you can no longer use sudo mode), there is a way out. You can use pkexec visudo, which will allow you to edit the sudoers file, provided you are authorized to run programs as root with PolicyKit. Find the default /etc/sudoers file online: https://wiki.debian.org/sudo. In case you are not authorized via PolicyKit, you can still edit the sudoers file using a live CD. Mount the computer hard drive at /mnt, say, and then sudo visudo -f /mnt/etc/sudoers. Courtesy of http://askubuntu.com/questions/73864. Of course, man sudoers and man visudo will tell you more as well. 

Tuesday | 11 Feb 2014 | 12:29:20 | GMT+0530
[apt] [proxy] [sudoers] Often what happens is that the proxy settings that are set via the command line are not reflected when executing sudo apt-get update/upgrade. The reason this happens is because root has a different set of environment variables than the ones that the user calling sudo does. In order to pass on environment variables to root when executing sudo, you need to edit the /etc/sudoers file. WARNING: Editing this file is dangerous. A corrupted sudoers file may prevent you from using sudo mode. Always use visudo to edit the sudoers file. The sudoers file, by default, has a setting that goes Defaults env_reset. This resets all but a few key environment variables. In order to retain variables of your choice, you need to add them to the "env_keep" list. This goes: "Defaults env_keep += "http_proxy https_proxy ftp_proxy", for example. man sudoers. Also man visudo. Take a look at https://help.ubuntu.com/community/AptGet/Howto for more apt options. Take a look at http://stackoverflow.com/questions/8633461/how-to-keep-environment-variables-when-using-sudo regarding retaining environment variables while using sudo. 

Monday | 03 Feb 2014 | 19:00:46 | GMT+0530
[gcc] [preprocessor] [macros] You can save and restore macros by using #pragma push_macro("<macro_name>") and #pragma pop_macro("<macro_name>") respectively! This means that you can temporarily redefine macros! For example, I used this to temporarily redefine GSL_REAL to std::real, and then define it back once the need had passed. 

Sunday | 02 Feb 2014 | 17:12:10 | GMT+0530
[git] [add] [staging] In order to add only some lines of a file for committing, use git add -p <filename>. If the file is new, use git add -N <filename>. Look up http://stackoverflow.com/questions/1085162/how-can-i-commit-only-part-of-a-file-in-git for more. 

Wednesday | 29 Jan 2014 | 18:55:44 | GMT+0530
[xinitrc] [X] [xsessionrc] In order to have your xmodmap commands take effect, put them in .xsessionrc, NOT .xinitrc. Take a look at this: http://askubuntu.com/questions/150487/what-happens-under-the-covers-to-log-me-in-and-start-up-the-unity-graphics-user. Also, man xmodmap for a few examples of remapping keys. 

Saturday | 18 Jan 2014 | 16:54:56 | GMT+0530
[vim] [ascii] To insert characters with a certain ascii code in vim, use <C-v><code>. For example, <C-v>178 will print the squared symbol. I think only three digit codes are supported, since ascii has only 256 characters. 

Saturday | 18 Jan 2014 | 16:52:39 | GMT+0530
[vim] [hex] [binary files] To open binary files in a readable format, use vim -b. A more complex tool is xxd. Look at http://vim.wikia.com/wiki/Hex_dump or man xxd for more info. 

Thursday | 09 Jan 2014 | 23:10:39 | GMT+0530
[vim] [substitution] [search] [registers] You can substitute the last search pattern in vim either by omitting the search pattern in the :%s command, or by inserting the contents of the search register onto the command line using <C-r>/. <C-r><reg> can be used anywhere to insert the contents of any register <reg>. In this case, the / register contains the last search pattern. 

Wednesday | 08 Jan 2014 | 18:42:16 | GMT+0530
[numpy] [type casting] To convert data types in numpy or scipy use np.astype 

Wednesday | 08 Jan 2014 | 11:57:07 | GMT+0530
[adobe acrobat] [reader] [bash completion] Adobe reader messes up bash completion. Delete /etc/bash_completion.d/acroread.sh in order to solve the issue. Why does acroread of all things even need bash completion anyways? Ridiculous. 

Sunday | 05 Jan 2014 | 22:21:21 | GMT+0530
[C] [C++] [>>] [<<] [right shift operator] [left shift operator] [circularity] The right and left shift operators are NOT circular. http://stackoverflow.com/questions/141525/absolute-beginners-guide-to-bit-shifting 

Friday | 03 Jan 2014 | 17:21:26 | GMT+0530
[linux] [usermod] [users] [uid] Changing a user id will only change ownership of files that are in that user's home directory. Look at http://stackoverflow.com/questions/18248056/change-user-id-in-linux. Also, you might have to change the group id of the user's group before changing the user and group ids of a user, because the new group must exist before you can change the group id. Doing a man usermod also helps. 

Friday | 03 Jan 2014 | 17:13:10 | GMT+0530
[linux] [users] [useradd] [adduser] [groups] For a first-level reference on how to use these commands, look at http://blog.pluralsight.com/linux-add-user-command. After that, man adduser. It is nicer than useradd. 

Monday | 23 Dec 2013 | 20:23:51 | GMT+0530
[bash] [redirection] For a simple bash redirection tutorial, look at http://wiki.bash-hackers.org/howto/redirection_tutorial 

Monday | 23 Dec 2013 | 10:37:15 | GMT+0530
[numpy] [float] [sizeof] Numpy uses 64-bit floats by default, although supposedly this is implementation dependent. If you are reading this several years from now, then you will have to re-check the validity of this number. In any case, in order to use, say, 32-bit floats instead, use np.float32. You also have a float16 and a float128, as of now. 

Monday | 23 Dec 2013 | 10:23:35 | GMT+0530
[cpp] [man] [c++] In order to look at the C++ man pages, do a man std_<blah>. For example, man std_list or man std_complex. To see what man pages are available, do an apropos -r "^std_" | grep <blah>. Note that these man pages are available only after you have installed libstdc++6-x.x-doc. 

Friday | 06 Dec 2013 | 10:41:19 | GMT+0530
[lyx] [hyperlinks] [color] To change the colours of hyperlinks from the default pink, put "\hypersetup{urlcolor=blue}" in the LaTeX preamble. Check these out for more options: http://tex.stackexchange.com/questions/82531/how-to-change-hyperlinks-color-lyx and http://tex.stackexchange.com/questions/823/remove-ugly-borders-around-clickable-cross-references-and-hyperlinks 

Monday | 25 Nov 2013 | 21:03:27 | GMT+0530
[matlab] [scipy] [convert] Look at this SO question to convert matlab code into python/scipy/numpy: http://stackoverflow.com/q/9845292/525169 

Monday | 25 Nov 2013 | 17:19:46 | GMT+0530
[python] [binary representation] Use the builtin bin() function to convert integers to binary. Use int(binary_repr, 2) to convert back. 

Sunday | 03 Nov 2013 | 23:40:55 | GMT+0530
[lyx] [fonts] [dejavu] [bera mono] To install DejaVu Sans Mono for lyx typewriter, install Bera Mono instead. It is almost the same. This is available via the package texlive-fonts-extra. You can then select article (noweb) as your document class for scrap, and still get the DejaVu font for code. Note that you cannot use ttf fonts via xetex or luatex when using the article (noweb) document class. I do not yet know why this is the case. 

Friday | 01 Nov 2013 | 19:26:54 | GMT+0530
[latex] [lyx] [installing fonts] [texmf] Look at http://tex.stackexchange.com/questions/88423/manual-font-installation to install fonts in latex/lyx manually. 

Friday | 18 Oct 2013 | 23:52:18 | GMT+0530
[vim] [pdf] [ps] Export a vim file in whole or in part to postscript using ":hardcopy >file.ps". Then use "ps2pdf <file.ps>" to convert to pdf. 

Thursday | 03 Oct 2013 | 18:31:37 | GMT+0530
[matplotlib] [xkcd style plots] http://jakevdp.github.io/blog/2013/07/10/XKCD-plots-in-matplotlib/ 

Sunday | 29 Sep 2013 | 16:56:07 | GMT+0530
[vim] [word count] Use g<C-g> to find the word count of a document. Also works in visual mode. 

Thursday | 26 Sep 2013 | 21:29:55 | GMT+0530
[artha] [thesaurus] [wordnet] Apparently, Artha uses a backend program called wn, which is a cli to the WordNet lexical database. man wn for more. 

Tuesday | 24 Sep 2013 | 22:20:30 | GMT+0530
[kbhit] [getch] [conio] Found an SO answer that gives a unix implementation of conio functions! http://stackoverflow.com/a/448982/525169. I implemented a test code for it here: https://github.com/praveenv253/tests/tree/master/nonblockinginput 

Friday | 20 Sep 2013 | 22:09:00 | GMT+0530
[gvim] [gedit] [default gui editor] To change the default GUI editor, you simply need to change the corresponding records in the file /usr/share/applications/defaults.list. I just went there and did a :%s/gedit/gvim/g in order to get text files to open in gvim instead of in gedit. 

Sunday | 15 Sep 2013 | 17:33:16 | GMT+0530
[vim] [filetype] If vim does not detect a filetype correctly, then you can add a modeline at the top of the file (first or second line, I think), which tells vim the filetype. For example, when the tex class file mycv.cls was incorrectly detected (as a Java class file, I presume), I added the modeline "% vim: set filetype=tex :" right at the top. This resolved the problem. Do a :help filetype for more info. 

Saturday | 14 Sep 2013 | 15:44:13 | GMT+0530
[timing] [profiling] [taskset] [cpuset] [cset] taskset only allows you to set something called the cpu affinity, meaning you can tell the system to run a certain process on some cores only. However, in order to tell the OS to run only your process on a given core, you need to use something called cpuset. This is a pseudo-filesystem which manages how processes are distributed among cores. man cpuset for more info. While cpuset is nice and everything, it is not very intuitive to use, especially if you just want to run your own process(es) separately from the general bunch of system-upkeep processes. A nice interface for cpuset is cset, whose shield command does exactly this. man cset and cset-shield for more info. Also take a look at this tutorial: https://www.suse.com/documentation/slerte_11/slerte_tutorial/data/slerte_tutorial.html. If you are hell bent on using cpuset nonetheless, just remember that moving sbin/init into the system cpuset along with the "general" lot of processes ensures that any newly spawned processes are also restricted to _that_ cpuset. Oh and dont forget to set the cpu_exclusive flag. 

Friday | 13 Sep 2013 | 18:01:01 | GMT+0530
[chrono] [timing] Dug a little deeper into outputting time durations. It turns out that time_point has a default accuracy that is system-implementation-dependent or something. My system seems to be only microsecond accurate. Read this for more info: http://stackoverflow.com/questions/15777073/how-do-you-print-a-c11-time-point 

Friday | 13 Sep 2013 | 17:04:17 | GMT+0530
[timing] [profiling] Use the <chrono> library. std::chrono::high_resolution_clock seems to do the trick. It should be giving me nanosecond resolution, but gives me only microsecond resolution. Nevertheless, better than clock() any day! 

Friday | 13 Sep 2013 | 16:29:33 | GMT+0530
Was not able to get setitimer to work - i.e., I was not able to print out the final value. 

Friday | 13 Sep 2013 | 16:29:08 | GMT+0530
[timing] [profiling] man setitimer. Purportedly a better way of timing than clock() 

Friday | 30 Aug 2013 | 18:19:12 | GMT+0530
[profiling code] [optimizing] The random-pausing technique: http://stackoverflow.com/questions/375913/what-can-i-use-to-profile-c-code-in-linux/378024#378024 

Thursday | 29 Aug 2013 | 19:00:52 | GMT+0530
[mv] [rename] [renaming multiple files] man rename. It can be used to rename multiple files. Regex and everything. 

Thursday | 22 Aug 2013 | 23:14:45 | GMT+0530
Also, make the .vim folder into a git repository with submodules. Will help a lot in the long run. 

Thursday | 22 Aug 2013 | 23:05:23 | GMT+0530
Still looking for a method to combine astyle with par - need autoformatting of code with 80-column limits and appropriate line-breaking 

Thursday | 22 Aug 2013 | 23:04:28 | GMT+0530
Look up scipy dot and multiply sometime 

Thursday | 22 Aug 2013 | 21:00:58 | GMT+0530
[python] [pep8] [formatting] In order to check errors in python formatting, use pep8 (installed with pip). In order to correct these errors automatically, use autopep8. 

Thursday | 22 Aug 2013 | 20:57:45 | GMT+0530
[paragraph] [formatting] [columns] In order to format paragraphs in text files or in comments in code, use the par program. It seems to be exactly what I need in many cases. 

Wednesday | 21 Aug 2013 | 10:26:18 | GMT+0530
[formatting code] [astyle] astyle automatically formats C and C++ code. It has a whole bunch of options that can be customized to get different kinds of output. Personally, I find "astyle --style=k/r --indent=tab --break-blocks --delete-empty-lines --pad-oper --align-pointer=name --unpad-paren" to my taste to start with 

Tuesday | 20 Aug 2013 | 18:28:19 | GMT+0530
[taskset] [process] [CPU] man taskset. Lets you set which processor to run a process on. 

Monday | 29 Jul 2013 | 00:05:17 | GMT+0530
Back in IIT! 

Friday | 26 Jul 2013 | 14:01:30 | GMT+0530
NCBS intern is over! :-o 

Monday | 22 Jul 2013 | 17:59:08 | GMT+0530
[cuda] [constant memory] [cudamemcpytosymbol] When using cudaMemcpyToSymbol, you can directly use the name of the variable you are transferring data to. In fact, this is the only way it seems to work. "var", &var, etc. all do not have the desired effect, despite the function seeming to request a const char basecode biophysics builtins copyleft cuda Demos device Docs Doxyfile Doxyfile.full Doxyfile.intermediate Doxyfile.minimal external geom gui hsolve hsolveCuda kinetics ksolve Makefile Makefile2 manager mesh moose moose_vcpp2008 msg nineml NOTES old_gui pymoose python randnum README regressionTests sbml scheduling setup_ setup.py shell signeur smol testReduce threadTests trials utility or a pointer. Also note that if you are including the cudaMemcpyKind, then it is the fifth parameter, not the fourth. The fourth parameter is an offset. 

Sunday | 21 Jul 2013 | 15:10:44 | GMT+0530
[git] [undo] In order to undo a commit, a reset, a merge, or anything involving refs, just take a look at git reflog and reset to the appropriate HEAD@{n} 

Saturday | 20 Jul 2013 | 22:36:30 | GMT+0530
An assertion failed randomly. Logging here for future reference: testBuiltins.cpp:330: void testGetMsg(): Assertion `numEntries == 101 failed. 

Friday | 19 Jul 2013 | 21:50:03 | GMT+0530
[git] [commit] [undo amend] In order to undo a git commit --amend, take a look at the git reflog. HEAD@{1} will contain the commit just before the amend (assuming that the amend was made _just_ now). So, reset to HEAD@{1} softly. This will make the erroneous amendment show up in the staging area. Then, you can commit it separately, with git commit -C HEAD@{1}, for example. Note that after resetting, the reflog has changed so that HEAD@{1} is now pointing to the amended commit. Take a look at this link: http://stackoverflow.com/questions/1459150/how-to-undo-git-commit-amend-done-instead-of-git-commit 

Friday | 19 Jul 2013 | 12:33:41 | GMT+0530
[gdb] [debugging] [python] If you want to debug a C or C++ program that has a python frontend, then run python using gdb. Then, inside gdb, use the "set args" command to set the python script to execute. Run the script until it encounters an issue, at which point you can use backtrace to show you the stack. "help stack" tells you how to examine the stack. 

Wednesday | 17 Jul 2013 | 23:01:28 | GMT+0530
[vim] [colorscheme] When you finally get around to creating a custom colorscheme for vim, check out the colors used by vim-powerline. These can be found in vim-powerline/autoload/Powerline/Colorschemes. I like the default color palette. 

Tuesday | 16 Jul 2013 | 17:33:31 | GMT+0530
[C++] [friend] [inheritance] Friendship is NOT inherited. class A { friend class B; }; class B { }; class C : public B { }; => C cannot access private and protected members of A! 

Monday | 15 Jul 2013 | 22:03:46 | GMT+0530
Reminder: Make a report of everything I have done here at NCBS, and of what is left 

Saturday | 13 Jul 2013 | 19:53:55 | GMT+0530
[ubuntu] [top menu] [panel] [launcher] Take a look at https://help.ubuntu.com/community/UnityLaunchersAndDesktopFiles for adding icons to the top menu or the launcher in ubuntu. 

Thursday | 11 Jul 2013 | 21:53:23 | GMT+0530
One more test message. Just for kicks. 

Thursday | 11 Jul 2013 | 21:50:25 | GMT+0530
Test the log.sh script. 

Thursday | 11 Jul 2013 | 20:32:24 | GMT+0530
[nvidia] [kernel module] [cuda] You need to reinstall the driver every time you update your linux kernel. This is so that the nvidia kernel module is correctly created inside the appropriate kernel folder. Uninstallation is achieved with "installer.run --uninstall". Reinstallation can be done as usual with "installer.run --optimus" and then selecting the driver for installtion. 

Thursday | 11 Jul 2013 | 13:55:23 | GMT+0530
[git] [diff] [tab] Customize the tab stop size in git diff by using $ git config --global core.pager "less -x5,9". man less to look at all options. 

Friday | 05 Jul 2013 | 18:18:59 | GMT+0530
[cuda-gdb] [printf] [cuPrintf] Dont use it. Just dont. Tried and failed far too many times. Use printf instead. It overloads the printf defined by cstdio, so you have to include cstdio for it to work. Also note, cuPrintf is some compatibility thing for compute capability < 2.x. We dont need to worry about it. 

Thursday | 04 Jul 2013 | 14:04:30 | GMT+0530
[nvidia] [cuda] [suspend] [kernel module] So I was facing this problem wherein the nvidia kernel module seemed to be getting unloaded after the computer was put to sleep. This can be resolved by explicitly adding the nvidia kernel module to the list of modules unloaded and reloaded before/after suspend. You do this by editing/creating the file /etc/pm/config.d/unload_modules. In it, add the following line: SUSPEND_MODULES="$SUSPEND_MODULES nvidia". And thats it! Putting the computer to sleep now will not interfere with cuda executability! http://www.techytalk.info/ubuntu-fix-network-stopped-working-after-resume-from-sleep/

Saturday | 29 Jun 2013 | 11:53:43 | GMT+0530
[ldd] [object files] [libraries] [dependencies] man ldd. ldd prints shared library dependencies. Useful for checking if you got the order of your arguments wrong while invoking g++ 

Saturday | 29 Jun 2013 | 11:52:07 | GMT+0530
[nm] [object files] [symbols] man nm. nm lists symbols from object files. Grep the output in order to search for a certain symbol 

Tuesday | 18 Jun 2013 | 22:17:01 | GMT+0530
[less] [colour] [grep] In order to retain colours when passing output through less, use the -R option. Also ensure that the program sending output is configured to send out colour even if it detects that the output is going to a pipe and not to stdout. For eg. grep will give you colour through a pipe only if you use the --color=always command line argument. --color=auto does not do so. 

Monday | 17 Jun 2013 | 18:35:03 | GMT+0530
Make sure you take some time out to properly learn bash if conditions and for loops. They can be extremely useful, especially for doing complex things to all files in a directory hierarchy that meet certain conditions, etc. 

Wednesday | 12 Jun 2013 | 19:15:07 | GMT+0530
Read up about how GPU memory accesses work! Need to refresh memory badly!! Read up about coalesced access and as to whether or not many threads can simultaneously read and write from global memory. Figure out exactly what "higher memory bandwidth of the GPU" is, in quantitative terms! 

Monday | 10 Jun 2013 | 17:30:44 | GMT+0530
[options] [menu] [remap keyboard] It finally works!!! So the reason the keyboard remapping was not working the last time I had tried was because the stupid PrtSc effect kept coming in the way. Once I got rid of the screenshot problem, it was smooth sailing, really! Just follow the instructions given here: http://askubuntu.com/questions/24916/how-do-i-remap-certain-keys. 

Monday | 10 Jun 2013 | 17:20:46 | GMT+0530
[alt] [HUD] The way to stop the HUD from popping up every time you accidentally press the alt key is similar. Go to System Settings -> Keyboard -> Shortcuts -> Launchers. Disable with backspace. 

Monday | 10 Jun 2013 | 17:19:37 | GMT+0530
[prtsc] [menu] [options] Okay, I havent managed to get the menu/options button working yet, but at least it doesnt keep activating print screen accidentally. The way to get rid of it is to go to System Settings -> Keyboard -> Shortcuts -> Screenshots. Can be reassigned there. 

Thursday | 06 Jun 2013 | 23:00:57 | GMT+0530
And to go one step beyond this as well: There is likely to be some bias because of the error in the uniformity of the random function itself. It may be more skewed towards lower numbers or something like that. A good experiment would be to try to correct for the error caused by this bias by measuring this error directly and then compensating for it. More thought is required before this idea is solid, but I think it is something worth exploring. 

Thursday | 06 Jun 2013 | 22:58:17 | GMT+0530
Going further with Monte Carlo: So far I have come up to the point of doing a vectorized implementation, and an error scaling experiment that I really have not given enough thought to. So firstly, for the error scaling experiment, what I really should be doing is to find the standard deviation from the mean for each given number of points. Then, we should see how this scales as the number of points increases. This is a far better measure of the "error" than whatever it is that I am currently doing. 

Thursday | 06 Jun 2013 | 15:37:14 | GMT+0530
So I finally have all the elements I need to carry out this gargantuan task of creating a website and populating it with data. It is absolutely essential that I have enough content matter to put in the blog though. Otherwise it will just look sad. 

Thursday | 06 Jun 2013 | 15:35:13 | GMT+0530
[gist-it] [embedding code] Good lord! I was struggling for so long to get a github file and embed it in a web-page. Turns out there is a simple tool which does it for you! The tool is called gist-it, and it really cannot get simpler than this. 

Wednesday | 05 Jun 2013 | 22:25:11 | GMT+0530
[syntaxhighlighter] SyntaxHighlighter looks pretty easy too. 

Wednesday | 05 Jun 2013 | 21:39:03 | GMT+0530
[mathjax] Getting mathjax to work using the cdn is a piece of cake on a hand-made website. 

Tuesday | 04 Jun 2013 | 21:48:45 | GMT+0530
Crux of the day: I made a workflow plan, and it is working! At least, as of now. It will take a while before I get stuck. Then we shall see... 

Tuesday | 04 Jun 2013 | 18:26:21 | GMT+0530
[python] [unit test] [unittest] I kept coming across unit tests in Django and not knowing what the hell they were. It appears that unit tests are actually python things, not restricted to only Django. http://docs.python.org/2/library/unittest.html. Incidentally, django has also come up with a test framework tutorial: https://docs.djangoproject.com/en/1.5/intro/tutorial05/ 

Tuesday | 04 Jun 2013 | 17:13:47 | GMT+0530
[apt] (contd.) Do a man apt-cache. It is too awesome! How the hell did I never figure this out? All I would have to have done was a man apt in order to find out about this program! 

Tuesday | 04 Jun 2013 | 17:05:13 | GMT+0530
[apt] So I finally figured out how to search for what is there in the damned apt cache on your own computer. Do an apt-cache search <pkgname>! 

Tuesday | 04 Jun 2013 | 16:48:41 | GMT+0530
Refer ~/Documents/Intern/NCBS/daily-logs/4-6-13 for info regarding today's notes. Had a lot of things to write... 

Tuesday | 04 Jun 2013 | 15:24:16 | GMT+0530
Learnt a bit of subversion today. Cant say I am much better off compared to where I started. But at least my confidence level with the tool has increased marginally. 

Tuesday | 04 Jun 2013 | 15:17:07 | GMT+0530
Wrt NCBS, I am generally groping in the dark. This is not at all a good idea. If I am not sure as to what is to be done so that I can properly start, then at the very least I should begin by making a document of what I need to do. This will give me some sort of roadmap to follow. 

Tuesday | 04 Jun 2013 | 12:15:55 | GMT+0530
[ipython] [config] For ipython configuration information, do ipython config -h. The default ipython profile is located in ~/.config/ipython. This is not present until generated for the first time. To generate, use ipython profile create. 

Monday | 03 Jun 2013 | 22:19:21 | GMT+0530
Reminder: Install gimp. 

Monday | 03 Jun 2013 | 15:53:09 | GMT+0530
This is a good Hines method tutorial: http://www.caam.rice.edu/~cox/neuro/nan06brnotes.pdf 

Monday | 03 Jun 2013 | 10:46:07 | GMT+0530
[bash] [bash completion] If you want to install a new completion file, for example django_bash_completion, then simply add the script to /etc/bash_completion.d/. The rest is taken care of 

Monday | 03 Jun 2013 | 08:00:03 | GMT+0530
This is a site that I shall be creating on the elec server itself, considering that blogspot and wordpress have proven to be deficient for displaying latex and code. First, I need to decide what I am going to write about. Only once this is done can I possibly decide the design or whatever else. 

Sunday | 02 Jun 2013 | 21:33:19 | GMT+0530
Why have I started treating this logfile like a diary? This is not a good idea, is it? 

Sunday | 02 Jun 2013 | 21:32:49 | GMT+0530
I need to make design plans as well as plans for content. Initial design plans simply involve bootstrap. I have no high-flying goals in this respect. However, uniqueness is always an important aspect in this business, viz. advertising. 

Sunday | 02 Jun 2013 | 21:30:45 | GMT+0530
For a long time I have been turning the idea of having a technical blog around in my head. The idea is most certainly worthy of credit, considering the number of esoteric items of interest to computer enthusiasts I happen to come across on a routine basis. However, I have not been allowed the time to carry out such an undertaking. But finally, now in summer, I may have a chance. The idea was to write one article per night. I do not know how feasible this is. But if I am to have a chance at a good college in graduate school, then I have to try. 

Sunday | 02 Jun 2013 | 21:27:19 | GMT+0530
In the meantime, it is also important that I get started with building a profile for myself. In due course of time, I will have to write a statement of purpose for applying to universities abroad. First and foremost, I will have to decide what I want to do. 

Saturday | 01 Jun 2013 | 16:28:29 | GMT+0530
Started reading the Hines paper again, but it looks like I will need at least a little bit of knowledge about numerical methods like Crank Nicolson before I can fully appreciate it. Nevertheless, I can at least try to get a vague idea and then correlate equations between the paper and the code. 

Saturday | 01 Jun 2013 | 16:09:16 | GMT+0530
Spent some more time going through the moose code. Along the way I found this README file in the hsolve folder that I hadnt noticed before. This file directed me to moose/Docs/developer/hsolve-developer-overview.cpp. This was the doc file that Niraj had made long ago and the one I had completely forgotten about. Turns out that it is pretty good. Now that I have read the objects present in hsolve, it proves much easier to understand. It also gives a chronological calling order of sorts, which could be useful. 

Saturday | 01 Jun 2013 | 16:06:17 | GMT+0530
Tried to get some of the sample code working so that I could examine the gpu information. I copied the samples from the IIT Microwave lab into the NCBS computer for this. However, attempts failed due to ld not being able to find -lcuda. 

Saturday | 01 Jun 2013 | 11:53:18 | GMT+0530
So I was wrong. In fact, Raphaels solver does transfer only the spike information. However, even this ends up consuming a huge fraction of time as the number of interneuronal connections increases. 

Wednesday | 29 May 2013 | 20:52:17 | GMT+0530
[cuda] [drivers] Remember! https://wiki.ubuntu.com/Kernel/LTSEnablementStack. xserver-xorg-lts-quantal is not compatible with libgl1-mesa-glx or libgl1-mesa-dri. You need to use libgl1-mesa-glx-lts-quantal and libgl1-mesa-dri-lts-quantal. Failure to do so will cause xserver to get uninstalled during the installation of libgl1-mesa-glx! Reinstallation of the xserver may prove successful to some extent, but you will face resolution issues and what not. Not figured out how to correct those problems yet. 

Monday | 27 May 2013 | 11:56:30 | GMT+0530
Cinfo is a class used to store information about other classes. 

Monday | 27 May 2013 | 11:55:59 | GMT+0530
At NCBS for the summer. Most of the following will be NCBS-related. 

Monday | 27 May 2013 | 11:21:05 | GMT+0530
Testing after OS reinstall. 27-5-13. 11:20 AM. 

Monday | 13 May 2013 | 10:22:08 | GMT+0530
[python] [sound] Install Tcl/Tk and python-tksnack. Then open python with padsp to get ALSA into OSS compatibility mode. Python will now be able to see a /dev/dsp, even though its not really there. Writing to /dev/dsp will send sound out through the speakers. But tksnack takes care of all that. Look at http://www.speech.kth.se/snack/#introex and http://www.speech.kth.se/snack/man/snack2.2/python-man.html.

Monday | 29 Apr 2013 | 09:43:07 | GMT+0530
[LaTeX] [LyX] [IEEE template] Instructions on how to set up the IEEE article format in LyX: http://plone.cs.luc.edu/users/gkt/writing/how_to/lyx_ieee 

Friday | 26 Apr 2013 | 02:09:07 | GMT+0530
For the bridge problem, try contracting loops into single nodes. Try doing this even as you read the input. 

Thursday | 18 Apr 2013 | 22:11:15 | GMT+0530
Do NOT try to create a comment macro. You cannot do something like #define COMMENT //. This is because gcc strips out comments before doing preprocessing. 

Thursday | 28 Mar 2013 | 17:16:53 | GMT+0530
Visiting NCBS. Making separate documents outlining what happened on each day. Take a look at those in order to know what happened. Will log where I put them, once I archive them. 

Saturday | 16 Mar 2013 | 14:43:52 | GMT+0530
[unicode] To find unicode characters by drawing, use shapecatcher.com 

Saturday | 16 Mar 2013 | 14:18:06 | GMT+0530
[latex] Website to find latex commands by drawing: detexify.kirelabs.org 

Wednesday | 27 Feb 2013 | 19:44:40 | GMT+0530
But this also bodes ill, because it means that the error in the program is elsewhere, and I need to find it. 

Wednesday | 27 Feb 2013 | 19:44:20 | GMT+0530
This bodes well in some sense because now I dont have to rewrite code in order to halve the indices everywhere I used the same syntax. 

Wednesday | 27 Feb 2013 | 19:43:41 | GMT+0530
Utter stupidity. So I finally found out my real mistake. I had added index to E_phi twice. As a result of that it was going to 100,100 instead of 50,50. Therefore, no double-float problem. 

Wednesday | 27 Feb 2013 | 00:41:35 | GMT+0530
Here are a list of the first ten relative errors, for reference: 1.58749955799e-06 1.0 1.0 1.0 1.0 10378.560793 133926374.435 322906876274.0 2.70622543036e+12 1.28283543045e+13 

Wednesday | 27 Feb 2013 | 00:40:11 | GMT+0530
If this indexing scheme has to be replaced everywhere, it promises to be extremely tedious. The worst part is that I still do not understand why this is happening at all. Stackoverflow did not yield any answers when I tried some simple queries. Maybe more searching will help. 

Wednesday | 27 Feb 2013 | 00:38:46 | GMT+0530
There could be multiple reasons for this. The most immediate reason that reveals itself is the fact that I have used the same kind of pointer arithmetic all over the program. This is probably causing severe indexing problems. It is rather strange that all these indexing errors did not show up on cuda-memcheck. But then perhaps the same thing that caused the error also was the culprit here in preventing it from being seen. 

Wednesday | 27 Feb 2013 | 00:36:24 | GMT+0530
A simple code snippet to list out the maximum relative error shows disastrous results. The relative error is 100% starting from time step 1, and increases to more than 100% from time step 5 onwards. This increase is practically exponential. 

Wednesday | 27 Feb 2013 | 00:30:32 | GMT+0530
However, even upon using a source location of 25,25, the program itself is not yielding the correct plots. There is still work left to do. 

Tuesday | 26 Feb 2013 | 23:41:02 | GMT+0530
So the problem was to do with indexing after all. Probably some double-float confusion. We need to figure out exactly what is going on so that a deterministic solution can be arrived at. 

Tuesday | 26 Feb 2013 | 23:40:22 | GMT+0530
The max absolute value of the difference is now 1.9591332045152884e-10 :D 

Tuesday | 26 Feb 2013 | 23:38:05 | GMT+0530
In order to find out for sure, I am now implementing the same faulty program, but with source point set to 25,25. Lets see what happens now... 

Tuesday | 26 Feb 2013 | 23:36:46 | GMT+0530
This might be due to addition of a constant to a pointer. The pointer itself is supposed to be of float type, but for some strange reason, 8 bytes might be getting added instead of 4. If so, that would explain a lot, including why I kept seeing the gaussian trying to start propagating from the left top corner of the mesh. 

Tuesday | 26 Feb 2013 | 23:35:01 | GMT+0530
Closer inspection reveals that the python array is initialized at 50,50 as expected, whereas the cuda array has been initialized with the source at 100,100! 

Tuesday | 26 Feb 2013 | 23:34:11 | GMT+0530
Relative error for time step 0 is 100%! Damn! 

Tuesday | 26 Feb 2013 | 23:33:40 | GMT+0530
Getting rid of the zeros for the first few matrices by using sp.where... 

Tuesday | 26 Feb 2013 | 23:25:00 | GMT+0530
Absolute error keeps increasing with time, as expected. Need to determine maximum relative error in order to determine severity. But for that, I need to get rid of the zeros. 

Tuesday | 26 Feb 2013 | 23:23:49 | GMT+0530
Took output from both python and cuda code for field matrices. Comparing them by opening them using scipy.loadtxt in python, then taking max of the absolute value of the difference. 

Tuesday | 26 Feb 2013 | 22:01:33 | GMT+0530
Errors in h-matrices are all quite small. Will now proceed to check field matrices at different points in time. 

Tuesday | 26 Feb 2013 | 22:00:41 | GMT+0530
delta h_mu: abs=2.99, rel=2.3% 

Tuesday | 26 Feb 2013 | 21:59:19 | GMT+0530
delta h_phi: abs=0.029, rel=0.77% 

Tuesday | 26 Feb 2013 | 21:58:43 | GMT+0530
delta h_nu: abs=0.44, rel=1.55% 

Tuesday | 26 Feb 2013 | 21:57:21 | GMT+0530
Then proceeded to compare matrices. Starting with the h-matrices. 

Tuesday | 26 Feb 2013 | 21:57:05 | GMT+0530
Did a preliminary check to ensure that the code fragments were similar 

Tuesday | 26 Feb 2013 | 21:56:44 | GMT+0530
Finally got around to actually comparing the matrices produced by the CUDA and python code. 

Monday | 25 Feb 2013 | 23:23:42 | GMT+0530
The solution to this can be tracked down at least in part by checking all the constant matrices that are generated at the beginning first. That is, compare r, sin_theta and the h-matrices with what we got using the python code. All this promises to be very painful to do, however. 

Monday | 25 Feb 2013 | 23:22:14 | GMT+0530
However, the output itself is not completely correct yet. The matrices are no longer remaining zero, but the source does not propagate. Evidently, there is some mistake in one of the update equations, or possibly in thread synchronization. 

Monday | 25 Feb 2013 | 23:20:02 | GMT+0530
Finally managed to figure out what the error was. It turned out that program didnt like the idea of fractional indices which were implicitly type cast to int for some weird reason. Therefore, I could not use something like NU_SIZE/2 for the source location. Changing this to an actual integer fixed the problem. 

Tuesday | 05 Feb 2013 | 23:04:19 | GMT+0530
Compiled all logs regarding cuda fdtd project. Document created. 

Thursday | 31 Jan 2013 | 00:35:53 | GMT+0530
Note how I am being rather bent on the idea that the error is necessarily to do with compilation and so on, and not to do with the update equations. The only way to check the update equations themselves would be to print out each matrix separately and then go through them one by one. The very idea is thoroughly repulsive. 

Thursday | 31 Jan 2013 | 00:34:29 | GMT+0530
Going back to __powf and using -use_fast_math to compile does not work either. 

Thursday | 31 Jan 2013 | 00:31:42 | GMT+0530
cmath does not appear to be making much of a difference. The output is still all zeros. 

Thursday | 31 Jan 2013 | 00:00:27 | GMT+0530
So I compile it for 20 and 21. But it still does not work. In fact, it gives me the same error. In desparation, I try to omit the architecture specification in the compile command altogether. But now of course, I get the age old and most irritating "Single stepping until exit from function __kernel_vsyscall, which has no line number information" in gdb. In short, still under the (possibly wrong) assumption that the issue is with __powf, I am proceeding to replace all occurrences of __powf with the C math library version, which supposedly runs in device functions - according to the nvidia programming guide. Lets see how that goes. 

Wednesday | 30 Jan 2013 | 23:55:12 | GMT+0530
So what do we do? I noticed that gdb exited at the first kernel call, which computes the r-theta coordinates from the nu-mu coordinates. Now one of the functions I used here was __powf. I remembered reading elsewhere that __powf has been newly added to the set of functions that cuda supports (also noting that gedit did not consider it a keyword for syntax highlighting until I set it as such). So I attempted to compile the code for a higher architecture version. However, compute_21 and sm_21 simply did not work. And guess what? nvcc does not have a man page. Typical. So I went looking for the official nvcc documentation, which somehow also proved to be extremely hard to find. Ultimately, I did find it though, and here is what it had to say. Currently, supported virtual architectures are compute_20 and supported GPU architectures are sm_21. Talk about confusing terminology. And why would they not have a compute_21? At least a link? It defeats me. 

Wednesday | 30 Jan 2013 | 23:49:02 | GMT+0530
So here's the update on how the cuda debugging is going. What I have done is to attempt to use cuda-gdb to figure out what is going wrong. cuda-gdb turns out to be a horribly intractable piece of executable that does little more than crash time after time. However, upon using gdb on a program compiled using the arch=compute_20,code=sm_20 options, it turns out that there is a certain CUDA API error, with error code 0x8. Having spent a considerable amount of time trying to decode this cryptic error message, I managed to find a toolkit reference document which gave me the error mappings - in no easy to find form, I might add. It turns out that the error means cudaErrorInvalidDeviceFunction. That is, The requested device function does not exist or is not compiled for the proper device architecture.

Tuesday | 29 Jan 2013 | 00:07:47 | GMT+0530
However, the CUDA implementation is _still_ not working. Different source locations give extremely different results. This needs to be interpreted. Probably the next step should be to take the python matrices and correlate with the cuda matrices. However, this will require extraction of the cuda matrices from device memory, which promises to be painful. 

Monday | 28 Jan 2013 | 23:33:08 | GMT+0530
Out of sheer stupidity, it turns out that I had repeated the same mistake I had made before, namely, giving values to nu and mu that were totally out of range. As a result the r, theta and h matrices were becoming full of nans. 

Monday | 28 Jan 2013 | 19:02:20 | GMT+0530
[gedit][colorscheme][colourscheme] The default colour schemes and language specs can be found under /usr/share/gtksourceview-3.0/ 

Monday | 28 Jan 2013 | 18:59:48 | GMT+0530
[gedit][colorscheme][colourscheme] The gedit colour scheme file must be placed in ~/.local/share/gedit/styles. 

Monday | 28 Jan 2013 | 00:30:13 | GMT+0530
Frequency at which we can store data thus appears to be poor at present. Although what is more important currently is dispersion error, which is far too great to ignore. 

Monday | 28 Jan 2013 | 00:28:29 | GMT+0530
What is worse, this is an unoptimized version of the code, meaning that the kernels are only likely to get faster, whereas the file write is going to sit at pretty much where it currently is. 

Monday | 28 Jan 2013 | 00:27:14 | GMT+0530
In other words, we can update about 45 times in the same time that we can write E_phi to file once. And this is for a 128x128 array... 

Monday | 28 Jan 2013 | 00:26:34 | GMT+0530
Considering that the update equations happen pairwise and that the H_nu, H_mu, E_phi is the longer stream, this becomes the rate limiting update step. The total time taken by these three is roughly 1ms. 

Monday | 28 Jan 2013 | 00:24:36 | GMT+0530
What is not negligible, of course, is the time taken to write to file. If we calculate this to be the time at finish of memcpy and before start of the next update H_nu, it takes about 45ms. 

Monday | 28 Jan 2013 | 00:21:30 | GMT+0530
The synchronous memory copy from device to host for E_phi then takes only about 12 to 13us, which is practically negligible. 

Monday | 28 Jan 2013 | 00:19:30 | GMT+0530
The update equations take between 200us and 500us to complete, with E_phi being the most at around 515us. 

Monday | 28 Jan 2013 | 00:18:07 | GMT+0530
Profiled using nvvp the other day. So, profile results are in. 

Wednesday | 23 Jan 2013 | 23:11:19 | GMT+0530
nvvp, the nvidia visual profiler, only works if there are no weird errors. For example, all severe memory errors should be taken care of first. 

Wednesday | 23 Jan 2013 | 22:54:06 | GMT+0530
When storing matrices as a 1D array, make sure that the column width of the *appropriate* matrix is used in order to compute the index. 

Wednesday | 23 Jan 2013 | 22:52:39 | GMT+0530
Many errors turn out to be because of incorrect memory allocation and access. Use cuda-memcheck to identify these. 

Wednesday | 23 Jan 2013 | 22:52:04 | GMT+0530
Resolved many cuda errors today 

Wednesday | 23 Jan 2013 | 22:51:52 | GMT+0530
The program isnt working yet 

Wednesday | 23 Jan 2013 | 22:51:38 | GMT+0530
Done with initial stage of documentation and cuda implementation 

Thursday | 17 Jan 2013 | 19:01:51 | GMT+0530
First, need to document implementation procedure 

Wednesday | 16 Jan 2013 | 19:40:19 | GMT+0530
Need to start implementing the dipole coordinates in cuda 

Thursday | 27 Dec 2012 | 13:12:16 | GMT+0530
Dipole implementation fixed! Problem was to do with the ranges of mu and nu. I had specified arbitrary ranges. The ranges are now more apt. The grid has also been made finer in the process. 

Thursday | 27 Dec 2012 | 00:56:22 | GMT+0530
Tried other points for source. Still the same results. Text output logging shows that cells outside of the starting angle also receive values, only very small ones. 

Wednesday | 26 Dec 2012 | 20:02:14 | GMT+0530
Discovered b-calm software which is a GPU implementation of FDTD with variable meshing, user defined excitation, etc. 

Wednesday | 26 Dec 2012 | 20:01:25 | GMT+0530
I am being stupid. Should try a few more source configurations to figure out whether or not the problem is isolated or general. 

Wednesday | 26 Dec 2012 | 18:33:17 | GMT+0530
Recording the matrix states at each time step becomes hard to visualise. Instead, making contour plots of H_r and H_phi in parallel with E_z is easier and more effective. 

Wednesday | 26 Dec 2012 | 16:14:11 | GMT+0530
In order to do a step-by-step debug, ostate of the system as defined by the field matrices should be recorded at every time step 

Wednesday | 26 Dec 2012 | 01:14:31 | GMT+0530
Next step is to calculate step by step by hand, and see what is going wrong 

Wednesday | 26 Dec 2012 | 01:00:30 | GMT+0530
There appears to be nothing wrong with the update equations. 

Wednesday | 26 Dec 2012 | 00:06:44 | GMT+0530
Polar coordinate implementation still does not work for gaussian source not placed at origin. Source does not spread in the phi direction. Potential problem is a mistake in one of the delta-phi related update equations. 

Wednesday | 26 Dec 2012 | 00:05:09 | GMT+0530
Note that scipy's mgrid function returns only integer valued arrays. In order to give r an arbitrarily small decimal value, you need to type cast it to float by calling sp.array(r, dtype=float) 

Wednesday | 26 Dec 2012 | 00:02:38 | GMT+0530
Problem fixed by making radial coordinate r start from an arbitrarily small value, rather than zero 

Wednesday | 26 Dec 2012 | 00:01:03 | GMT+0530
Polar coordinates was also refusing to work for simple gaussian source at origin 

Tuesday | 25 Dec 2012 | 17:49:37 | GMT+0530
Reducing the level of difficulty of the problem. Trying polar coordinates first 

Monday | 24 Dec 2012 | 19:12:13 | GMT+0530
By the way, what we are trying to do is to simulate a simple source, eg. gaussian, in 2D space using dipole coordinates. 

Monday | 24 Dec 2012 | 19:11:33 | GMT+0530
However, it should be noted that the presence of E_mu may really not be required for the given simulation 

Monday | 24 Dec 2012 | 18:59:52 | GMT+0530
Next step should be to attempt to reintroduce E_mu into the update equations while keeping del()/del(phi) zero. 

Monday | 24 Dec 2012 | 18:48:35 | GMT+0530
There is a need to go through the Lysak paper and the notes on dipole coordinate systems by Swisdak carefully and resolve the differences in the way they have constructed their coordinates 

Monday | 24 Dec 2012 | 18:45:25 | GMT+0530
Yet another point I failed to consider earlier is that the nu-coordinate has a negative sign. The effects of this need to be seen. 

Monday | 24 Dec 2012 | 18:43:26 | GMT+0530
There also appears to be another error in Lysak\'s paper: The negative sign is missing in the curlE equation. 

Monday | 24 Dec 2012 | 18:41:38 | GMT+0530
Currently E_mu is set to 0 by the paper (Lysak). Need to find out why. There appears to be no good reason to do this. 

Monday | 24 Dec 2012 | 18:40:50 | GMT+0530
2D implementation of dipole coordinate system is not working 

Monday | 24 Dec 2012 | 18:40:21 | GMT+0530
Trying out dipole coordinate system 

Monday | 24 Dec 2012 | 18:40:01 | GMT+0530
Working on computational electromagnetics 

Sunday | 22 Jul 2012 | 16:42:56 | GMT+0530
Look at http://courses.cms.caltech.edu/cs101gpu/ for a good GPU programming tutorial. Also teaches openGL. 

Thursday | 31 May 2012 | 12:31:03 | GMT+0530
"xargs -0" reads arguments from the standard input - arguments are delimited by \0's - and passes them as trailing command line arguments to a command passed (with initial arguments if required) as an argument to xargs. 

Thursday | 31 May 2012 | 12:28:48 | GMT+0530
"find ." displays all files recursively from the current directory 

Thursday | 31 May 2012 | 12:27:16 | GMT+0530
All of repo's working depends upon its subcommands, which in general need to be specified by the project using repo. The subcommands for b2g can be found in (mozilla-b2g)/B2G/.repo/repo/subcmds 

Wednesday | 30 May 2012 | 17:52:40 | GMT+0530
./flash.sh gaia 

Wednesday | 30 May 2012 | 17:52:36 | GMT+0530
./flash.sh 

Wednesday | 30 May 2012 | 17:52:30 | GMT+0530
./build.sh 

Wednesday | 30 May 2012 | 17:52:25 | GMT+0530
./config.sh galaxy-s2 

Wednesday | 30 May 2012 | 17:52:05 | GMT+0530
# this is cloned from http://github.com/mozilla-b2g/B2G.git 

Wednesday | 30 May 2012 | 17:51:50 | GMT+0530
cd B2G 

Wednesday | 30 May 2012 | 17:50:52 | GMT+0530
Steps followed were: 

Wednesday | 30 May 2012 | 17:49:25 | GMT+0530
Successfully ported B2G to Samsung Galaxy S2 for the first time 

Friday | 25 May 2012 | 12:23:29 | GMT+0530
Find heimdall source in Programs/cloned_repos/ 

Friday | 25 May 2012 | 12:23:12 | GMT+0530
Removed heimdall v1.3.2 and installed v1.3.1 from source 

Sunday | 20 May 2012 | 22:56:55 | GMT+0530
Created a few shell commands to do the same - find on gmail with subject "Pulling all repos" 

Sunday | 20 May 2012 | 22:56:11 | GMT+0530
Found out that make sync does not pull all submodules from upstream 

Sunday | 20 May 2012 | 22:17:27 | GMT+0530
MSM/QSD Boot to Gecko Enablement project allows users to build a Boot to Gecko-based platform containing additional enhancements for Qualcomm chipsets. - The secret behind boot/msm? Check codeaurora.org for more details. 

Saturday | 19 May 2012 | 19:13:09 | GMT+0530
Created a summary of functions in gonk/build/envsetup.sh - find in gmail 

Friday | 11 May 2012 | 13:30:09 | GMT+0530
pcmcia = PC card 

Friday | 11 May 2012 | 12:12:22 | GMT+0530
kapil.kumar@sasken.com 

Friday | 11 May 2012 | 00:46:45 | GMT+0530
All this is being done because of the cyclic dependency in adb - first time around, we need to use the Android SDK to make gonk. Subsequently, gonk makes the SDK. 

Friday | 11 May 2012 | 00:45:47 | GMT+0530
http://developer.android.com/sdk/installing.html - instructions for the android sdk 

Friday | 11 May 2012 | 00:40:00 | GMT+0530
https://developer.mozilla.org/en/Mozilla/Boot_to_Gecko/Building_B2G_for_Samsung_Galaxy_S2 - this is for galaxy s2 

Friday | 11 May 2012 | 00:39:36 | GMT+0530
https://developer.mozilla.org/en/Mozilla/Boot_to_Gecko/Setting_Up_Boot_to_Gecko_Build_Environment - this is the main reference page 

Friday | 11 May 2012 | 00:38:43 | GMT+0530
Stopped downloading stuff at JDK. Need to download from the ADT plugin onwards 

Friday | 11 May 2012 | 00:10:23 | GMT+0530
We need to target a particular chipset and find out all the steps involved in porting 

Friday | 11 May 2012 | 00:09:00 | GMT+0530
Presentation on 29th - We need to have the complete "planan" for porting b2g onto a low cost phone 

Thursday | 10 May 2012 | 14:53:00 | GMT+0530
Avahi daemon helps discover other comps, printers, etc. on a network as soon as you connect 

Wednesday | 09 May 2012 | 15:04:18 | GMT+0530
Mozilla uses the IPDL - IPC Protocol Definition Language to send messages between its processes and threads 

Wednesday | 09 May 2012 | 14:27:37 | GMT+0530
Just finished reading http://elinux.org/Android_Booting 

Wednesday | 09 May 2012 | 14:23:35 | GMT+0530
http://www.yolinux.com/TUTORIALS/LinuxTutorialNetworking.html - Good network configuration tutorial - but only for fedora 

Wednesday | 09 May 2012 | 14:22:20 | GMT+0530
Copying B2G. 12GB. Not going to finish today. 

Wednesday | 09 May 2012 | 14:10:48 | GMT+0530
First log message after reinstalling OS 

